<template>
    <td :class="additionalItemClass">
        <component :is="props.column.formatComponent"
                   :row="props.row"
                   :column="props.column"
                   :grid="props.grid" />
    </td>
</template>

<script setup lang="ts">
    import { PropType, computed } from "vue";
    import { ColumnDefinition, IGridState } from "@Obsidian/Types/Controls/grid";

    const props = defineProps({
        column: {
            type: Object as PropType<ColumnDefinition>,
            required: true
        },

        row: {
            type: Object as PropType<Record<string, unknown>>,
            required: true
        },

        grid: {
            type: Object as PropType<IGridState>,
            required: true
        }
    });

    const additionalItemClass = computed((): string => {
        let classes = props.column.itemClass ?? "";

        if (["sm", "md", "lg", "xl"].includes(props.column.visiblePriority)) {
            // We don't have support for lg just yet, but it's coming.
            if (props.column.visiblePriority === "xl") {
                classes += ` d-none d-lg-table-cell`;
            }
            else {
                classes += ` d-none d-${props.column.visiblePriority}-table-cell`;
            }
        }

        return classes.trim();
    });
</script>
