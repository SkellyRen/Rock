<template>
    <tr ref="rowElement" :title="tooltipText">
        <DataCell v-for="column in props.columns"
                  :column="column"
                  :row="props.data"
                  :grid="props.grid" />
    </tr>
</template>

<script setup lang="ts">
    import { PropType, computed, ref } from "vue";
    import DataCell from "./dataCell.partial.obs";
    import { ColumnDefinition, IGridState } from "@Obsidian/Types/Controls/grid";

    const props = defineProps({
        columns: {
            type: Array as PropType<ReadonlyArray<ColumnDefinition>>,
            required: true
        },

        data: {
            type: Object as PropType<Record<string, unknown>>,
            required: true
        },

        grid: {
            type: Object as PropType<IGridState>,
            required: true
        },

        tooltipField: {
            type: String as PropType<string>,
            required: false
        }
    });

    const rowElement = ref<HTMLElement | null>(null);

    const tooltipText = computed((): string | undefined => {
        if (!props.tooltipField) {
            return undefined;
        }

        const fieldValue = props.data[props.tooltipField];

        if (typeof fieldValue === "string") {
            return fieldValue || undefined;
        }
        else if (typeof fieldValue === "number") {
            return fieldValue.toString();
        }
        else if (fieldValue) {
            return String(fieldValue);
        }
        else {
            return undefined;
        }
    });
</script>
